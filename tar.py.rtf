{\rtf1\ansi\ansicpg936\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset134 PingFangSC-Semibold;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red64\green142\blue210;
\red62\green62\blue62;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c74902;\cssrgb\c100000\c100000\c100000;\cssrgb\c30588\c63137\c85882;
\cssrgb\c30980\c30980\c30980;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25400\viewh12920\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import os\
import tarfile\
import time\
\
from datetime import datetime\
from multiprocessing import Pool\
from glob import glob\
from functools import partial\
\
\
def display(msg):\
    print(f'\{datetime.now()\}: \{msg\}')\
\
\
def make_tar(path, src_path, dst_path):\
    if not can_be_tar(path):    #
\f1 \'c5\'d0\'b6\'cf
\f0 can_be_tar 
\f1 \'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'a3\'ac
\f0 \
        display(f'
\f1 \'cc\'f8\'b9\'fd
\f0  \{path\}')\
        return False\
    t0 = time.time()\
    dstfp = path.replace(src_path, dst_path) + '.tar\'92. #
\f1 \'bd\'ab
\f0 path
\f1 \'c0\'ef\'c3\'e6\'b5\'c4
\f0 src_path,
\f1 \'cc\'e6\'bb\'bb\'b3\'c9dst.path\'a3\'ac\'d5\'e2\'d1\'f9\'be\'cd\'d3\'d0\'c1\'cb\'d2\'aa\'b4\'e6\'b7\'c5\'b5\'c4\'c4\'bf\'c2\'bc\'c7\'e5\'b5\'a5\'a1\'a3
\f0 \
    os.makedirs(os.path.dirname(dstfp), exist_ok=True)   #
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\'d3\'c3\'c0\'b4\'b4\'b4\'bd\'a8
\f2\b \'b6\'e0\'b2\'e3
\f1\b0 \'c4\'bf\'c2\'bc\'a3\'a8\'b5\'a5\'b2\'e3\'c7\'eb\'d3\'c3{\field{\*\fldinst{HYPERLINK "https://pythonexamples.org/python-create-directory-mkdir/"}}{\fldrslt 
\f3 \cf4 os.mkdir}}
\f3 )
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
    with tarfile.open(dstfp, 'w') as tar:                         #
\f1 \'b4\'f2\'bf\'aa\'b8\'d5\'b8\'d5\'b4\'b4\'bd\'a8\'ba\'c3\'b5\'c4
\f0 tar
\f1 \'ce\'c4\'bc\'fe\'a3\'ac\'b5\'a5\'b8\'f6\'ce\'c4\'bc\'fe
\f0 \
        tar.add(path, arcname = os.path.basename(path))
\f1   #\'b0\'d1\'ce\'c4\'bc\'fe\'b7\'c5\'bd\'f8\'c8\'a5
\f0 \
    delta_time = time.time() - t0\
    display(f'\{dstfp\} 
\f1 \'b4\'f2\'b0\'fc\'cd\'ea\'b3\'c9\'a3\'ac\'ba\'c4\'ca\'b1
\f0 \{round(delta_time, 2)\} s')\
    return True\
\
\
def can_be_tar(path, threshold=3600):    #
\f1 \'bd\'ab\'c5\'d0\'b6\'cf\'d0\'b4\'b3\'c9\'d2\'bb\'b8\'f6\'b7\'b5\'bb\'d8
\f0 ture
\f1 \'ba\'af\'ca\'fd
\f0 \
    ctime = os.path.getctime(path).  #
\f1 \'bb\'f1\'c8\'a1\'ce\'c4\'bc\'fe\'b4\'b4\'bd\'a8\'ca\'b1\'bc\'e4
\f0 \
    time_now = time.time()     #
\f1 \'cf\'d6\'d4\'da\'b5\'c4\'ca\'b1\'bc\'e4
\f0 \
    if time_now - ctime >= threshold:\
        return True\
    else:\
        return False\
\
\
if __name__=='__main__':\
    src_path='/mnt/meteoceph/similar_weather/deploy/productions/geographic/history/reanalysis'\
    dst_path='/mnt/meteo-wog2/MoAI/data/testing/internal/geographic/history/reanalysis'\
\
    display(f'
\f1 \'bf\'aa\'ca\'bc\'c9\'a8\'c3\'e8
\f0  \{src_path\}\'92).    #
\f1 \'cf\'d4\'ca\'be\'ba\'af\'ca\'fd
\f0 \
    subpaths = sorted(glob(os.path.join(src_path, \'91*/*\'92)))
\f1 \'a1\'a3
\f0  #join
\f1 \'c6\'b4\'bd\'d3\'b5\'d8\'d6\'b7,
\f2\b \cf5 \cb3 \expnd0\expndtw0\kerning0
python\'b5\'c4glob\'c4\'a3\'bf\'e9\'bf\'c9\'d2\'d4\'b6\'d4\'ce\'c4\'bc\'fe\'bc\'d0\'cf\'c2\'cb\'f9\'d3\'d0\'ce\'c4\'bc\'fe\'bd\'f8\'d0\'d0\'b1\'e9\'c0\'fa\'a3\'ac\'b2\'a2\'b1\'a3\'b4\'e6\'ce\'aa\'d2\'bb\'b8\'f6list\'c1\'d0\'b1\'ed
\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
    display(f'
\f1 \'b9\'b2\'c9\'a8\'c3\'e8\'b3\'f6
\f0  \{len(subpaths)\} 
\f1 \'b8\'f6\'b4\'fd\'b4\'f2\'b0\'fc\'b5\'c4\'c4\'bf\'c2\'bc
\f0 ')\
    freeze_make_tar = partial(make_tar, src_path=src_path, dst_path=dst_path) #
\f1 \'b6\'b3\'bd\'e1\'c1\'bd\'b8\'f6\'b2\'ce\'ca\'fd\'a3\'ac\'d5\'e2\'d1\'f9\'c3\'bf\'b4\'ce\'be\'cd\'d6\'bb\'b4\'ab\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'a3\'ac\'b1\'c8\'bd\'cf\'b7\'bd\'b1\'e3
\f0 \
    with Pool(60) as p:\
        p.map(freeze_make_tar, subpaths) #
\f1 \'b6\'e0\'bd\'f8\'b3\'cc\'a3\'ac\'c7\'b0\'d2\'bb\'b8\'f6\'b1\'ed\'ca\'be\'d2\'aa\'d6\'b4\'d0\'d0\'b5\'c4\'ba\'af\'ca\'fd\'a3\'ac\'ba\'f3\'d2\'bb\'b8\'f6\'b1\'ed\'ca\'be\'ca\'e4\'c8\'eb\'b5\'c4\'b2\'ce\'ca\'fd
\f0 \
\
\
}